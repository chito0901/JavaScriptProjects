this = reference to the object where THIS is used
       (the object depends on the immediate context)
       person.name = this.name

const person1 = {
    name: "Spongebob",
    faveFood: "hamburgers",
    sayHello: function(){console.log(`Hi! I am ${name}`)}
};

person1.sayHello();

-- the above code will display // Hi! I am
-- to access one of the properties inside the person1, use 'this' 


const person1 = {
    name: "Spongebob",
    faveFood: "hamburgers",
    sayHello: function(){console.log(`Hi! I am ${this.name}`)}
};

person1.sayHello();

-- 'this.name' can be use as 'person1.name' to access the properties within the object person1

const person2 = {
    name: "Patrick",
    faveFood: "pizza",
    sayHello: function(){console.log(`Hi! I am ${this.name}`)},
    eat: function(){console.log(`${this.name} is eating ${this.faveFood}`)}
};

person2.eat();

-- the code will display Patrick is eating pizza

const person2 = {
    name: "Patrick",
    faveFood: "pizza",
    sayHello: () => console.log(`Hi! I am ${this.name}`),
    eat: () => console.log(`${this.name} is eating ${this.faveFood}`)
};

person2.eat();

-- 'this' doesn't work with arrow function
-- the above code will display " is eating undefined"