Callback = a function that is passed as an argument to another function.
           
           used to handle asynchronous operations:
           1. Reading a file.
           2. Network Request
           3. Interacting with databases

           "Hey, when you're done, call this next."

hello(wait);


function hello(callback) {
    console.log("Hello!");
    callback();
}

function wait() {
    console.log("Wait!");
}

function leave() {
    console.log("Leave!");
}

function goodbye() {
    console.log("Goodbye!");
}

sum(displayConsole, 1, 2)

function sum(callback, x, y){
    let result = x + y;
    callback(result);
}

function displayConsole(result){
    console.log(result);
}

function displayPage(result){
    document.getElementById("myH1").textContent = result;
}



.forEach() = method used to iterate over the elements of an array
           and apply a specified function (callback) to each element

           array.forEach(callback)
           element, index, array are provided


// numbers
let numbers = [1, 2, 3, 4, 5];

numbers.forEach(display);           // will display each element

function display(element){
    console.log(element);
}

numbers.forEach(double);            // will double the values of numbers

function double(element, index, array){
    array[index] = element * 2;
}

numbers.forEach(triple);            // will triple the value

function triple(element, index, array){
    array[index] = element * 3;
}         


// strings

let fruits = ["apple", "orange", "banana", "coconut"];

fruits.forEach(upperCase);      // all strings to upper case
fruits.forEach(display);

function upperCase(element, index, array){
    array[index] = element.toUpperCase();
}

fruits.forEach(capitalize);      // Capitalize all strings
fruits.forEach(display);

function capitalize(element, index, array){
    array[index] = element.charAt(0).toUpperCase() + element.slice(1);
}

let fruits = ["APPLE", "ORANGE", "BANANA", "COCONUT"];

fruits.forEach(lowerCase);      // all strings to lower case
fruits.forEach(display);

function lowerCase(element, index, array){
    array[index] = element.toLowerCase();
}

function display(element){
    console.log(element);
}



.map() = accepts a callback and applies that function 
        to each element of an array, then return a new array


// numbers
const number = [1, 2, 3, 4, 5];
const squares = numbers.map(square);
const cubes = numbers.map(cube);

console.log(cube);

function square(element){
    return Math.pow(element, 2)
}

function cube(element){
    return Math.pow(element, 3)
}

// strings
const students = ["Spongebob", "Patrick", Squidward", "Sandy"];
const studentsUpper = students.map(upperCase);
const studentsLower = students.map(lowerCase)

function upperCase(element){
    return element.toUppercase();
}

function lowerCase(element){
    return element.toLowercase();
}


const dates = ["2024-1-10", "2025-2-20", "2026-3-30"];
const formattedDates = dates.map(formatDates);

function formatDates(elements){
    const parts = elements.split("-");
    return `${parts[1]}/${parts[2]}/${parts[3]}`;
}


.filter() = creates a new array by filtering out elements


// numbers
let numbers = [1, 2, 3, 4, 5, 6, 7];
let evenNumbers = numbers.filter(isEven);
let oddNumbers = numbers.filter(isOdd);

function isEven(element){
    return element % 2 === 0;
}

function isOdd(element{
    return element % 2 !== 0;
})


const ages = [16, 17, 18, 18, 19, 20, 60];
const adults = ages.filter(isAdult);
const children = ages.filter(isChild);

function isAdult(element){
    return element >= 18;
}

function isChild(element){
    return element < 18;
}


// strings

const words = ["apple", "orange", "banana", "kiwi", "pomengranate", "coconut"];
const shortWords = words.filter(getShordWords);
const longWords = words.filter(getLongWords;)

function getShortWords(element){
    return element.length <= 6;
}

function getLongWords(element){
    return element.length > 6;
}



.reduce() = reduce the elements of an array to a single value


// numbers

const prices = [5, 30, 10, 25, 15, 20];

const total = prices.reduce();

function sum(accumulator, element){
    return accumulator + element;
}

// accumulator = the previous element (can be ranamed)
// element = the next element in the array (can be renamed)

const grades = [75, 50, 90, 80, 65, 95];

const maximum = grades.reduce(getMax);
const minimum = grades.reduce(getMin);

function getMax(accumulator, element){
    return Math.max(accumulator, element)
}

function getMin(accumulator, element){
    return Math.min(accumulator, element)
}